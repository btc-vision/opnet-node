syntax = "proto3";
package OPNetProtocolV1;

/*
  AUTHENTICATION
*/
message Authentication {
  string version = 1;
  bytes clientAuthCipher = 2;
  string trustedChecksum = 3;
}

enum AuthenticationStatusEnum {
  SUCCESS = 0;
  ERROR = 1;
}

message AuthenticationStatus {
  AuthenticationStatusEnum status = 1;
  string message = 2;
}

message ClientKeyCipherExchange {
  bytes clientKeyCipher = 1;
  bytes clientAuthCipher = 2;
  bytes identity = 3;
}

message ServerKeyCipherExchange {
  bytes serverKeyCipher = 1;
  bytes serverSigningCipher = 2;
  bool encryptionEnabled = 3;
}

/*
  NETWORKING
*/

message Ping {
  uint64 timestamp = 1;
  uint64 lastPing = 2;
}

/*
  PEERING
*/

enum PeerType {
  ARCHIVE = 0;
  FULL = 1;
  LIGHT = 2;
}

message PeerInfo {
  bytes identity = 1;
  string opnetVersion = 2;
  string address = 3;
  PeerType type = 4;
}

message DiscoveryResponse {
  repeated PeerInfo peers = 1;
}

message Discover {
  string version = 1;
  string trustedChecksum = 2;
}

/*
  BLOCKCHAIN
*/
message Transaction {
  bytes transaction = 1;
}
